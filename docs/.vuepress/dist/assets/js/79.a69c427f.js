(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{786:function(s,t,a){"use strict";a.r(t);var n=a(70),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"g1-gc-中的-xx-usestringdeduplication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#g1-gc-中的-xx-usestringdeduplication"}},[s._v("#")]),s._v(" G1 GC 中的 -XX:+UseStringDeduplication")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://jaxenter.com/duplicate-strings-158567.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("UseStringDeduplication – pros and cons"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("这篇文章介绍了 G1 GC 中的一个参数 "),a("code",[s._v("-XX:+UseStringDeduplication")]),s._v(" ，这个参数主要用于消除 JVM 中一些重复的字符串。")]),s._v(" "),a("h2",{attrs:{id:"重复字符串怎么产生？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重复字符串怎么产生？"}},[s._v("#")]),s._v(" 重复字符串怎么产生？")]),s._v(" "),a("div",{staticClass:"language-vim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[s._v("String string1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nString string2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果执行了上述代码，那么将会产生两个不同的字符串对象，然而他们的内容却是一样的，或者以客户查询银行流水为例，通常多条记录也会对应多个字符串，即使其中金额不同。")]),s._v(" "),a("p",[s._v("这个问题从 Java 诞生之初就存在了，社区也尝试了多种力求侵入性最小的方案来解决这个问题，最新的解决方案就是 "),a("code",[s._v("-XX:+UseStringDeduplication")]),s._v(" 。")]),s._v(" "),a("h2",{attrs:{id:"xx-usestringdeduplication-的使用注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xx-usestringdeduplication-的使用注意事项"}},[s._v("#")]),s._v(" -XX:+UseStringDeduplication 的使用注意事项")]),s._v(" "),a("p",[a("code",[s._v("-XX:+UseStringDeduplication")]),s._v(" 看起来很好，但其使用也有一些优缺点：")]),s._v(" "),a("ol",[a("li",[s._v("只能在 G1 GC 中使用；")]),s._v(" "),a("li",[s._v("只对长生命周期的对象起作用（"),a("strong",[s._v("只会对老年代进行回收")]),s._v("），如果对短生命周期立刻就会被回收的对象进行消除也没有意义，只会浪费系统资源，这个生命周期的阈值由 "),a("code",[s._v("-XX:StringDeduplicationAgeThreshold")]),s._v(" 决定；")]),s._v(" "),a("li",[s._v("对 GC 暂停时间会有影响，因为是借助 GC 消除重复字符串的，所以会占用 GC 的一些资源，所以可能会增加 GC 的暂停时间。但同时，如果回收率特别高的话，可以减少 GC 其他阶段的暂停时间，因此还需要自行做个衡量测试。可以通过 "),a("code",[s._v("-XX:+PrintStringDeduplicationStatistics")]),s._v(" 这个参数来打印出重复字符串的消除情况；")]),s._v(" "),a("li",[a("code",[s._v("-XX:+UseStringDeduplication")]),s._v(" "),a("strong",[s._v("仅仅是替换相同内容的 Sting 对象底层的 char[] 数组")]),s._v("，而非消除 String 对象本身（一个 String 对象至少占用 24 bytes），相当于 "),a("code",[s._v("aString.value = anotherString.value")]),s._v(" 。所以如果消除的重复字符串有绝大部分是短字符串，效果其实并不理想，这时候使用 "),a("code",[s._v("String.intern()")]),s._v(" 或许会更有效；")]),s._v(" "),a("li",[s._v("从 Java 8 update 20 这个版本开始才有这个特性。")])]),s._v(" "),a("h2",{attrs:{id:"disappointing-story-on-memory-optimization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#disappointing-story-on-memory-optimization"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://blog.gceasy.io/2018/07/17/disappointing-story-on-memory-optimization/",target:"_blank",rel:"noopener noreferrer"}},[s._v("DISAPPOINTING STORY ON MEMORY OPTIMIZATION"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("这篇文章讲述了他们的一个 application 使用 "),a("code",[s._v("-XX:+UseStringDeduplication")]),s._v(" 一次失败的经历。")]),s._v(" "),a("p",[s._v("文章中在使用了该参数后，发现对于应用实际运行并没有任何帮助，通过分析 GC 日志中的对象晋升速度，发现只有很少量的对象才会晋升到老年代，大部分对象在年轻代就被回收了，因此 "),a("code",[s._v("-XX:+UseStringDeduplication")]),s._v(" 在这个场景下，并没有实际帮助。")]),s._v(" "),a("p",[s._v("也就是说，要使用这个参数，要看下老年代中是否存在大量长生命周期的字符串对象，通常在缓存较多的系统中使用效果较好。")]),s._v(" "),a("p",[s._v("分析重复的字符串内容以及 GC 晋升速度，可以通过以下两个网站查看：")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://heaphero.io/heap-index.jsp",target:"_blank",rel:"noopener noreferrer"}},[s._v("Heap Hero"),a("OutboundLink")],1),s._v("：通过 "),a("code",[s._v("jmap -dump:live,format=b,file=/path/to/file PID")]),s._v(" 并上传 dump 文件。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://gceasy.io/gc-index.jsp",target:"_blank",rel:"noopener noreferrer"}},[s._v("GCeasy"),a("OutboundLink")],1),s._v("：通过上传 GC 日志文件。")]),s._v(" "),a("h2",{attrs:{id:"怎么查看-string-对象占用的内存大小？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么查看-string-对象占用的内存大小？"}},[s._v("#")]),s._v(" 怎么查看 String 对象占用的内存大小？")]),s._v(" "),a("p",[s._v("可以通过 JDK 官方提供的 "),a("code",[s._v("jol")]),s._v(" 来查看，在 Maven 中加入以下依赖：")]),s._v(" "),a("div",{staticClass:"language-vim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("dependency"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("groupId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("org"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("openjdk"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("jol"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("groupId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("artifactId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("jol"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("core"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("artifactId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.9")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dependency"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("并在代码中调用：")]),s._v(" "),a("div",{staticClass:"language-vim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[s._v("public class StringTest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    public static void "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        String str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        System"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ClassLayout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toPrintable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        System"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ClassLayout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toPrintable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\njava"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("lang"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("String object internals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n OFFSET  SIZE     TYPE DESCRIPTION                               VALUE\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("object header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("N")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("A\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("   char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("value                              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("N")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("A\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("      int String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("hash                               "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("N")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("A\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("loss due "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v(" the "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("next")]),s._v(" object alignment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nInstance size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" bytes\nSpace losses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" bytes internal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" bytes external "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" bytes total\n\njava"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("lang"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("String object internals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n OFFSET  SIZE     TYPE DESCRIPTION                               VALUE\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("object header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000001")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("object header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("object header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                           da "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("02")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" f8 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11011010")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000010")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00000000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11111000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("134216998")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("   char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("value                              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("      int String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v("hash                               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("loss due "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v(" the "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("next")]),s._v(" object alignment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nInstance size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" bytes\nSpace losses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" bytes internal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" bytes external "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" bytes total\n\n\nProcess finished with "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" code "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("p",[s._v("需要注意的是，jol 在这里仅显示对象在浅引用下的内存布局。")]),s._v(" "),a("p",[s._v("接下来是对一个 String 对象至少占用 24 bytes 的分析：")]),s._v(" "),a("p",[s._v("在 64-bit 的系统并开启指针压缩的前提下，每个对象都会有个对象头（Object Header），通常占 8 bytes（markword） + 4 bytes（class pointer）= 12 bytes，4 byets 是对 char[] 数组的引用，4 byets 为 String 对象的 hash 值，还有 4 bytes 属于对齐填充（对象大小必须为 8 bytes 的倍数）。")])])}),[],!1,null,null,null);t.default=e.exports}}]);