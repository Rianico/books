(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{831:function(s,t,a){"use strict";a.r(t);var r=a(70),n=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"linux-服务器的核心数关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-服务器的核心数关系"}},[s._v("#")]),s._v(" Linux 服务器的核心数关系")]),s._v(" "),a("p",[s._v("首先有几个概念需要明了：")]),s._v(" "),a("ul",[a("li",[s._v("物理 CPU ：服务器插槽上的 CPU 个数，可以通过不重复的 physical id 得知有几个。")]),s._v(" "),a("li",[s._v("CPU 核心数：每个物理 CPU 都可以有多个 core。")]),s._v(" "),a("li",[s._v("CPU 逻辑核心数：若处理器支持超线程技术，还可以在物理 CPU 核心数的基础上再乘以一个倍数（通常为 2）。")])]),s._v(" "),a("div",{staticClass:"language-vim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[s._v("# 服务器的物理 CPU 数量\n$ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("proc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("cpuinfo | "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"physical id"')]),s._v(" | "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sort")]),s._v(" | uniq|"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("wc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("l")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n# 每个 CPU 的核心数\n$ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("proc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("cpuinfo | "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cores"')]),s._v("|uniq\ncpu cores       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n# 总的核心数 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" 超线程技术\n$ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("proc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("cpuinfo | "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"processor"')]),s._v(" |"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("wc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("l")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);