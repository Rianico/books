(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{834:function(t,_,a){"use strict";a.r(_);var s=a(70),r=Object(s.a)({},(function(){var t=this,_=t.$createElement,a=t._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_06-理论三：面向对象相比面向过程有哪些优势？面向过程真的过时了吗？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_06-理论三：面向对象相比面向过程有哪些优势？面向过程真的过时了吗？"}},[t._v("#")]),t._v(" 06 | 理论三：面向对象相比面向过程有哪些优势？面向过程真的过时了吗？")]),t._v(" "),a("h3",{attrs:{id:"_1-什么是面向过程编程？什么是面向过程编程语言？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是面向过程编程？什么是面向过程编程语言？"}},[t._v("#")]),t._v(" 1. 什么是面向过程编程？什么是面向过程编程语言？")]),t._v(" "),a("p",[t._v("面向过程编程和面向过程编程语言并没有严格的官方定义。理解这两个概念最好的方式是跟面向对象编程和面向对象编程语言进行对比。相较于面向对象编程以类为组织代码的基本单元，"),a("strong",[t._v("面向过程编程则是以过程（或方法）作为组织代码的基本单元")]),t._v("。它最主要的特点就是数据和方法相分离。相较于面向对象编程语言，面向过程编程语言最大的特点就是不支持丰富的面向对象编程特性，比如继承、多态、封装。")]),t._v(" "),a("h3",{attrs:{id:"_2-面向对象编程相比面向过程编程有哪些优势？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-面向对象编程相比面向过程编程有哪些优势？"}},[t._v("#")]),t._v(" 2. 面向对象编程相比面向过程编程有哪些优势？")]),t._v(" "),a("ul",[a("li",[t._v("对于大规模复杂程序的开发，程序的处理流程并非单一的一条主线，而是错综复杂的网状结构。面向对象编程比起面向过程编程，更能应对这种复杂类型的程序开发。")]),t._v(" "),a("li",[t._v("面向对象编程相比面向过程编程，具有更加丰富的特性（封装、抽象、继承、多态）。利用这些特性编写出来的代码，更加易扩展、易复用、易维护。")]),t._v(" "),a("li",[t._v("从编程语言跟机器打交道的方式的演进规律中，我们可以总结出：面向对象编程语言比起面向过程编程语言，更加人性化、更加高级、更加智能。")])]),t._v(" "),a("h3",{attrs:{id:"思考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考"}},[t._v("#")]),t._v(" 思考")]),t._v(" "),a("p",[t._v("Q：面向对象编程比面向过程编程，更加容易应对大规模复杂程序的开发。但像 Unix、Linux 这些复杂的系统，也都是基于 C 语言这种"),a("strong",[t._v("面向过程的编程语言")]),t._v("开发的，你怎么看待这个现象？")]),t._v(" "),a("p",[t._v("A：首先要明确一点，面向对象编程与面向过程变成是指"),a("strong",[t._v("风格")]),t._v("，操作系统使用C语言这种"),a("strong",[t._v("面向过程的编程语言")]),t._v("是出于执行效率上来考虑的，在实际开发中，仍然可以以面向对象编程风格来降低开发复杂度。这里补充一点：越是业务无关的程序（如中间件，框架等），越是需要使用，面向对象编程来隐藏复杂度。")])])}),[],!1,null,null,null);_.default=r.exports}}]);