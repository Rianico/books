(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{845:function(s,t,a){"use strict";a.r(t);var n=a(70),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-计算机的指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-计算机的指令"}},[s._v("#")]),s._v(" 1. 计算机的指令")]),s._v(" "),a("p",[s._v("从硬件的角度来看，CPU 就是一个"),a("strong",[s._v("超大规模集成电路")]),s._v("，通过电路实现了加法、乘法乃至各种各样的处理逻辑。")]),s._v(" "),a("p",[s._v("从软件工程师的角度来讲，CPU 就是一个执行各种"),a("strong",[s._v("计算机指令")]),s._v("（Instruction Code）的逻辑机器。这里的计算机指令，也叫作"),a("strong",[s._v("机器语言")]),s._v("（Machine Language）。")]),s._v(" "),a("p",[s._v("虽然现在我们都是用高级语言进行编程，但实际上计算机只认识 0 和 1，我们使用的高级语言都是通过某种方式翻译为机器语言的。")]),s._v(" "),a("p",[s._v("不同的 CPU 有不同的"),a("strong",[s._v("计算机指令集")]),s._v("（Instruction Set），一个计算机程序会有成千上万条指令，CPU 无法存储全部指令，所以一般将这些指令存储在存储器中，这类计算机叫做"),a("strong",[s._v("存储程序型计算机")]),s._v("（Stored-program Computer）。")]),s._v(" "),a("p",[s._v("以 C 语言为例，通常是将一段代码"),a("strong",[s._v("编译")]),s._v("（Compile）成"),a("strong",[s._v("汇编语言")]),s._v("（ASM，Assembly Language），再用"),a("strong",[s._v("汇编器")]),s._v("（Assembler）将其翻译成"),a("strong",[s._v("机器码")]),s._v("（Machine Code）。这一条条机器码，就是一条条计算机指令。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// test.c")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("执行以下步骤可以看到汇编代码以及机器码：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ gcc -g -c test.c\n$ objdump -d -M intel -S test.o\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("左边为机器码，右边为汇编代码：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("o"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("     file format elf64"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("x86"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Disassembly")]),s._v(" of section "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000000000000000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("55")]),s._v("                      push   rbp\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("48")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("89")]),s._v(" e5                mov    rbp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("rsp\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   c7 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" fc "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("    mov    DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x1")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   c7 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" f8 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("02")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("    mov    DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x2")]),s._v("\n  a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("b "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" f8                mov    eax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" fc                add    DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("eax\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5d")]),s._v("                      pop    rbp\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   c3                      ret    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("blockquote",[a("p",[s._v("计算机是只认识机器码的，机器码是给人阅读的。而汇编码，是为了给人读的。")]),s._v(" "),a("p",[s._v("与 C 语言不通，Java 是通过将程序翻译为字节码，再由 JVM 将字节码翻译为机器码的。")])]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_2-指令的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-指令的分类"}},[s._v("#")]),s._v(" 2. 指令的分类")]),s._v(" "),a("p",[s._v("不同的 CPU 的指令集通常也不同，但通常指令可以分为五大类：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("算术类指令")]),s._v("，加减乘除在 CPU 层面，都会变成一条条算术类指令。")]),s._v(" "),a("li",[a("strong",[s._v("数据传输类指令")]),s._v("，给变量赋值、在内存里读写数据，用的都是数据传输类指令。")]),s._v(" "),a("li",[a("strong",[s._v("逻辑类指令")]),s._v("，逻辑上的与或非，都是这一类指令。")]),s._v(" "),a("li",[a("strong",[s._v("条件分支类指令")]),s._v("，"),a("code",[s._v("if/else")]),s._v(" 其实都是条件分支类指令。")]),s._v(" "),a("li",[a("strong",[s._v("无条件跳转指令")]),s._v("，在调用函数的时候，其实就是发起了一个无条件跳转指令。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://static001.geekbang.org/resource/image/eb/97/ebfd3bfe5dba764cdcf871e23b29f197.jpeg",alt:""}})]),s._v(" "),a("p",[s._v("以开源的 MIPS 指令集为例，MIPS 指令是一个 32 位的整数，高 6 位叫"),a("strong",[s._v("操作码")]),s._v("（Opcode），也就是代表这条指令具体是一条什么样的指令，剩下的 26 位有三种格式，分别是 R、I 和 J：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("R 指令")]),s._v("是一般用来做算术和逻辑操作，里面有读取和写入数据的寄存器的地址。如果是逻辑位移操作，后面还有位移操作的"),a("strong",[s._v("位移量")]),s._v("（shamt），而最后的"),a("strong",[s._v("功能码")]),s._v("，则是在前面的操作码不够的时候，扩展操作码表示对应的具体指令的。")]),s._v(" "),a("li",[a("strong",[s._v("I 指令")]),s._v("，则通常是用在数据传输、条件分支，以及在运算的时候使用的并非变量还是常数的时候。这个时候，没有了位移量和操作码，也没有了第三个寄存器，而是把这三部分直接合并成了一个地址值或者一个常数。")]),s._v(" "),a("li",[a("strong",[s._v("J 指令")]),s._v("就是一个跳转指令，高 6 位之外的 26 位都是一个跳转后的地址。")])]),s._v(" "),a("p",[s._v("以下面的 R 指令为例：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# OP rd, rs, rt")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$t0")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$s2")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$s1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://static001.geekbang.org/resource/image/8f/1d/8fced6ff11d3405cdf941f6742b5081d.jpeg",alt:""}})]),s._v(" "),a("p",[s._v("opcode 是 0，rs 代表第一个寄存器 s1 的地址是 17，rt 代表第二个寄存器 s2 的地址是 18，rd 代表目标的临时寄存器 t0 的地址，是 8。因为不是位移操作，所以位移量是 0。这些都可以表示为二进制以及十六进制。")]),s._v(" "),a("p",[s._v("以前都是通过打孔卡来存储程序的，上面的指令用十六进制在打孔卡上表示如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://static001.geekbang.org/resource/image/31/9c/31b430f9e4135f24a998b577cae8249c.png",alt:""}})]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_3-指令的执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-指令的执行"}},[s._v("#")]),s._v(" 3. 指令的执行")]),s._v(" "),a("p",[s._v("从逻辑上来看，CPU 其实就是由一堆"),a("strong",[s._v("寄存器")]),s._v("组成的。而寄存器就是 CPU 内部，由多个触发器（Flip-Flop）或者锁存器（Latches）组成的简单电路。")]),s._v(" "),a("p",[s._v("触发器和锁存器，其实就是两种不同原理的数字电路组成的逻辑门。N 个触发器或者锁存器，就可以组成一个 N 位（Bit）的寄存器，能够保存 N 位的数据。")]),s._v(" "),a("blockquote",[a("p",[s._v("比方说，我们用的 64 位 Intel 服务器，寄存器就是 64 位的。")])]),s._v(" "),a("p",[s._v("CPU 里有许多寄存器，但有三个较为特殊：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("PC 寄存器")]),s._v("（Program Counter Register），也叫"),a("strong",[s._v("指令地址寄存器")]),s._v("（Instruction Address Register，Java 中叫做程序计数器），用来存放下一条需要执行的计算机指令的内存地址。")]),s._v(" "),a("li",[a("strong",[s._v("指令寄存器")]),s._v("（Instruction Register），用来存放当前正在执行的指令。")]),s._v(" "),a("li",[a("strong",[s._v("条件码寄存器")]),s._v("（Status Register），用里面的一个一个标记位（Flag），存放 CPU 进行算术或者逻辑计算的结果。")])]),s._v(" "),a("p",[s._v("还有一些其他很多寄存器，根据存放的数据类型来分类，比如整数寄存器、浮点数寄存器、向量寄存器和地址寄存器等等。有些寄存器既可以存放数据，又能存放地址，我们就叫它通用寄存器。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://static001.geekbang.org/resource/image/cd/6f/cdba5c17a04f0dd5ef05b70368b9a96f.jpg",alt:""}})]),s._v(" "),a("p",[s._v("一个程序执行的时候，CPU 会根据 PC 寄存器里的地址，"),a("strong",[s._v("从内存里面把需要执行的指令读取到指令寄存器里面执行")]),s._v("，然后根据指令长度自增，开始顺序读取下一条指令。一个程序的一条条指令，在内存里面是"),a("strong",[s._v("连续保存")]),s._v("的，也会一条条顺序加载。")]),s._v(" "),a("p",[s._v("当遇到一些特殊指令，比如 J 指令的时候，会修改 PC 寄存器里的地址，这时候就不是按照顺序加载了。这也是 "),a("code",[s._v("if/else")]),s._v(" 实现的原理。")]),s._v(" "),a("p",[s._v("以下面代码为例：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// test.c")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<time.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdlib.h>")])]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("srand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("进行编译：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ gcc -g -c test.c\n$ objdump -d -M intel -S test.o \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("汇编代码如下：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("83")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7d")]),s._v(" fc "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("             cmp    DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3f")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("75")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("09")]),s._v("                   jne    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("main"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x4a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("41")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   c7 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" f8 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("    mov    DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x1")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("48")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   eb "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("07")]),s._v("                   jmp    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("51")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("main"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x51")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   c7 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" f8 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("02")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("    mov    DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x2")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("51")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   b8 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("          mov    eax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("可以看到 "),a("code",[s._v("if(r == 0)")]),s._v(" 被编译成了 "),a("code",[s._v("cmp")]),s._v(" 和 "),a("code",[s._v("jne")]),s._v(" 两条指令：")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("DWORD PTR")]),s._v(" 代表操作的数据类型是 32 位的整数，而 "),a("code",[s._v("[rbp-0x4]")]),s._v(" 则是一个寄存器的地址，所以第一个操作数就是从指定的寄存器里拿到变量 r 的值，接着跟第二个操作数进行比较，并将结果存到"),a("strong",[s._v("条件码寄存器")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("如果比较结果为 True，就把"),a("strong",[s._v("标志条件码")]),s._v("（对应的条件码是 ZF，Zero Flag）设置为 1。")]),s._v(" "),a("blockquote",[a("p",[s._v("cmp 指令可以理解为是在对两个操作数做减法，但是不保存结果，而是根据计算结果，修改条件码寄存器的标志位：CF（是否借位）、PF（bit 位位 1 的奇偶数）、ZF（结果是否为 0）、SF（符号位）、OF（溢出位）。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("jne")]),s._v("（ jump if not equal）指令会查看对应的标志位，如果为 0，则会跳转到后面操作数 4a 指定的位置。")]),s._v(" "),a("blockquote",[a("p",[s._v("除了零标志之外，Intel 的 CPU 下还有"),a("strong",[s._v("进位标志")]),s._v("（CF，Carry Flag）、"),a("strong",[s._v("符号标志")]),s._v("（SF，Sign Flag）以及"),a("strong",[s._v("溢出标志")]),s._v("（OF，Overflow Flag），用在不同的判断条件下。")]),s._v(" "),a("p",[s._v("J 指令除了 jne（Jump if not equal）之外，还有 jle（Jump if less or equal）等，不同指令读取的是条件码寄存器上不同的标志位，对应关系详见"),a("a",{attrs:{href:"http://www.unixwiz.net/techtips/x86-jumps.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("链接"),a("OutboundLink")],1),s._v("。")])])]),s._v(" "),a("li",[a("p",[s._v("最后一条指令的操作数 "),a("code",[s._v("eax")]),s._v(" ，代表累加寄存器，通常没有实际作用，只是代表一个占位符，这是由于 main 函数一般没有返回值，因此特意生成一个返回值为 0 的默认指令。")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://static001.geekbang.org/resource/image/b4/fa/b439cebb2d85496ad6eef2f61071aefa.jpeg",alt:""}})]),s._v(" "),a("p",[s._v("实际上，for loop 也是借助 J 指令来实现的，以下面汇编码为例：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   c7 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" f8 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("    mov    DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   eb "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("a                   jmp    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("e \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("b "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" f8                mov    eax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" fc                add    DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("eax\n\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("83")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" f8 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v("             add    DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x1")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("83")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7d")]),s._v(" f8 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("02")]),s._v("             cmp    DWORD PTR "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rbp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x2")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("e f0                   jle    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   b8 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("          mov    eax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("可以看到，在 1e 以及 22 处，通过 "),a("code",[s._v("cmp")]),s._v(" 以及 "),a("code",[s._v("jle")]),s._v(" 的结合使用，不断地从 22 调回 14 处，直到满足条件才能执行到 24。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://static001.geekbang.org/resource/image/fb/17/fb50fe39181abb0f70fcfec53cf12317.jpg",alt:""}})]),s._v(" "),a("p",[s._v("指令的执行，除了简单地通过 PC 寄存器自增的方式顺序执行外，条件码寄存器会记录下当前执行指令的条件判断状态，然后通过跳转指令读取对应的条件码，修改 PC 寄存器内的下一条指令的地址，最终实现 if…else 以及 for/while 这样的程序控制流程。")]),s._v(" "),a("p",[s._v("因此，想要实现 goto 这个语义，需要三个寄存器来实现：PC 寄存器、指令寄存器、条件码寄存器。")])])}),[],!1,null,null,null);t.default=r.exports}}]);