(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{783:function(e,t,n){"use strict";n.r(t);var i=n(70),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[e._v("#")]),e._v(" 概念")]),e._v(" "),n("p",[e._v("RDD，弹性分布式数据集，是 Spark 对数据的一个抽象，用于囊括存在于内存、磁盘中的分布式数据实体。")]),e._v(" "),n("p",[e._v("RDD 可以从横竖两个方向归纳其特征：")]),e._v(" "),n("ul",[n("li",[e._v("横向（分布式）：partitioner、partitions\n"),n("ul",[n("li",[e._v("partitions：对应 RDD 分布式数据实体中的所有数据分片")]),e._v(" "),n("li",[e._v("partitioner：定义了划分数据分片的分区规则")])])]),e._v(" "),n("li",[e._v("纵向（容错性）：dependencies、compute\n"),n("ul",[n("li",[e._v("dependencies：记录了生成 RDD 所需的依赖链")]),e._v(" "),n("li",[e._v("compute：封装了从父 RDD 到子 RDD 的计算逻辑")])])])]),e._v(" "),n("p",[e._v("dependencies 和 compute 为 RDD 提供了容错能力，构建成了一张 DAG（有向无环图）。")]),e._v(" "),n("p",[e._v("同时还有 "),n("code",[e._v("preferredLocations")]),e._v("，主要用途为在部分场景下，提升计算的 I/O 效率。")])])}),[],!1,null,null,null);t.default=r.exports}}]);