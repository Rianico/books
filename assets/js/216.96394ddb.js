(window.webpackJsonp=window.webpackJsonp||[]).push([[216],{938:function(t,a,s){"use strict";s.r(a);var e=s(70),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"jvm-排查工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm-排查工具"}},[t._v("#")]),t._v(" JVM 排查工具")]),t._v(" "),s("h2",{attrs:{id:"_1-jstat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-jstat"}},[t._v("#")]),t._v(" 1. jstat")]),t._v(" "),s("p",[t._v("当看到某个 JVM 进程使用 CPU 过高的时候，排查过程如下：")]),t._v(" "),s("ol",[s("li",[t._v("通过 "),s("code",[t._v("top -H -p <pid>")]),t._v(" 定位 JVM 里 CPU 利用率过高的线程 id")]),t._v(" "),s("li",[t._v("执行 "),s("code",[t._v('printf "%x" <tid>')]),t._v(" 将线程 ID 转化为 16 进制")]),t._v(" "),s("li",[t._v("执行 "),s("code",[t._v("jstack <pid>")]),t._v(" 获取 JVM 所有线程，凭借第二步得到线程 ID 的十六进制格式搜索即可得到线程调用栈")])])])}),[],!1,null,null,null);a.default=r.exports}}]);