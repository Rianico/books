(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{944:function(t,s,a){"use strict";a.r(s);var n=a(70),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"定时器的几种实现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定时器的几种实现方式"}},[t._v("#")]),t._v(" 定时器的几种实现方式")]),t._v(" "),a("p",[t._v("定时器的本质：一连串任务的集合，且DeadLine越近，执行的优先程度越高。")]),t._v(" "),a("p",[t._v("用户角度看来应具备的几个操作：")]),t._v(" "),a("ul",[a("li",[t._v("NewTask：将新任务加入任务集合")]),t._v(" "),a("li",[t._v("Cancel：取消某个任务")]),t._v(" "),a("li",[t._v("Run：执行一个到底的定时任务")])]),t._v(" "),a("p",[t._v("判断一个任务是否到期，基本是采用轮询的方式，"),a("strong",[t._v("每隔一个时间片去检查最近的任务是否到期")]),t._v("，在 NewTask 和 Cancel 的行为发生之后，任务调度策略也会出现调整。")]),t._v(" "),a("h2",{attrs:{id:"_1-定时器使用的几种数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-定时器使用的几种数据结构"}},[t._v("#")]),t._v(" 1. 定时器使用的几种数据结构")]),t._v(" "),a("h3",{attrs:{id:"_1-1-双向有序链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-双向有序链表"}},[t._v("#")]),t._v(" 1.1 双向有序链表")]),t._v(" "),a("p",[t._v("Java中的LinkedList是一个天然的双向两表，几个操作的时间复杂度如下（N：任务数）：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("NewTask：O(N)")]),t._v("，需要按照expireTime查找合适的位置并插入")]),t._v(" "),a("li",[a("strong",[t._v("Cancel：O(1)")]),t._v("，取消时往往持有该节点的引用，直接断开即可")]),t._v(" "),a("li",[a("strong",[t._v("Run：O(1)")]),t._v("，同样持有对应节点的引用")])]),t._v(" "),a("h3",{attrs:{id:"_1-2-堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-堆"}},[t._v("#")]),t._v(" 1.2 堆")]),t._v(" "),a("p",[t._v("Java 中， PriorityQueue 是一个天然的堆，可以利用传入的 Comparator 来决定其中元素的优先级。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("NewTask：O(logN)")]),t._v("，expireTime 是 Comparator 的对比参数，时间复杂度对应堆中添加元素的时间复杂度")]),t._v(" "),a("li",[a("strong",[t._v("Cancel：O(logN)")]),t._v("，时间复杂度对应堆中删除元素的时间复杂度")]),t._v(" "),a("li",[a("strong",[t._v("Run：O(1)")]),t._v("，由 expireTime 形成的小根堆，我们总能在堆顶找到最快的即将过期的任务。")])]),t._v(" "),a("p",[t._v("堆与双向有序链表相比，NewTask 和 Cancel 形成了 trade off，但考虑到现实中，定时任务取消的场景并不是很多，所以"),a("strong",[t._v("堆实现的定时器要比双向有序链表优秀")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_1-3-时间轮"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-时间轮"}},[t._v("#")]),t._v(" 1.3 时间轮")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Rianico/Image/master/ARTS_Tips/%E5%8D%95%E5%B1%82%E6%97%B6%E9%97%B4%E8%BD%AE.png",alt:"单层时间轮"}})]),t._v(" "),a("p",[t._v("Netty 针对 I/O 超时调度的场景进行了优化，实现了 HashedWheelTimer 时间轮算法。")]),t._v(" "),a("p",[t._v("HashedWheelTimer是环形结构的，由多个bucket组成，每个bucket使用一个list存储多个task，若一个task的delay超过了一轮时间，则计数+1，并且也会随着时间走过一轮而减少计数。")]),t._v(" "),a("blockquote",[a("p",[t._v("以上图为例，假设一个 bucket 是 1 秒，则指针转动一轮表示的时间段为 8s，假设当前指针指向 0，此时需要调度一个 3s 后执行的任务，显然应该加入到 (0+3=3) 的方格中，指针再走 3 次就可以执行了；如果任务要在 10s 后执行，应该等指针走完一轮零 2 格再执行，因此应放入 2，同时将 round（1）保存到任务中。检查到期任务时只执行 round 为 0 的， bucket 上其他任务的 round 减 1。")]),t._v(" "),a("p",[t._v("再看图中的 bucket5，我们可以知道在 "),a("em",[t._v("8+5=13s 后，有两个任务需要执行，在  2X8+5=21s")]),t._v(" 后有一个任务需要执行。")]),t._v(" "),a("p",[t._v("NewTask：O(1) Cancel：O(1) Run：O(M) Tick：O(1) M：bucket ，M ~ N/C ，其中 C 为单轮 bucket 数，Netty 中默认为 512")])]),t._v(" "),a("p",[t._v("复杂度还受到多个task分配到一个bucket的影响，并且多了指针转动的开销。")]),t._v(" "),a("p",[t._v("Netty 的 HashedWheelTimer 时有两个重要的参数： "),a("code",[t._v("tickDuration")]),t._v(" 和 "),a("code",[t._v("ticksPerWheel")]),t._v("：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("tickDuration")]),t._v("：即一个 bucket 代表的时间，默认为 100ms，Netty 认为大多数场景下不需要修改这个参数；")]),t._v(" "),a("li",[a("strong",[t._v("ticksPerWheel")]),t._v("：一轮含有多少个 bucket ，默认为 512 个，如果任务较多可以增大这个参数，降低任务分配到同一个 bucket 的概率。")])]),t._v(" "),a("h3",{attrs:{id:"_1-4-层级时间轮"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-层级时间轮"}},[t._v("#")]),t._v(" 1.4 层级时间轮")]),t._v(" "),a("p",[t._v("Kafka对针对时间轮算法进行了优化，实现了层级时间轮 TimingWheel，结构如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Rianico/Image/master/ARTS_Tips/%E5%B1%82%E7%BA%A7%E6%97%B6%E9%97%B4%E8%BD%AE.png",alt:"层级时间轮"}})]),t._v(" "),a("blockquote",[a("p",[t._v("NewTask：O(H)")]),t._v(" "),a("p",[t._v("Cancel：O(H)")]),t._v(" "),a("p",[t._v("Run：O(M)")]),t._v(" "),a("p",[t._v("Tick：O(1)")]),t._v(" "),a("p",[t._v("H：层级数量")])]),t._v(" "),a("p",[t._v("如果任务的时间跨度很大，数量也多，传统的 HashedWheelTimer 会"),a("strong",[t._v("造成任务的 round 很大")]),t._v("，单个 bucket 的任务 List 很长，并会维持很长一段时间。这时可将轮盘按时间粒度分级，"),a("strong",[t._v("通过顶层粗粒度的tickDuration，可以大大减少指针转动的次数")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("设想一下一个定时了 3 天，10 小时，50 分，30 秒的定时任务，在 tickDuration = 1s 的单层时间轮中，需要经过："),a("em",[t._v("3")]),t._v("*"),a("em",[t._v("24*60+10*60+50*60+30")]),t._v(" 次指针的拨动才能被执行。但在 wheel1 tickDuration = 1 天，wheel2 tickDuration = 1 小时，wheel3 tickDuration = 1 分，wheel4 tickDuration = 1 秒 的四层时间轮中，只需要经过 "),a("em",[t._v("3+10+50+30")]),t._v(" 次指针的拨动！")])]),t._v(" "),a("p",[t._v("因此，层级时间轮在时间跨度很大的时候对比原来的时间轮具有优势。")]),t._v(" "),a("h2",{attrs:{id:"_2-几种实现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-几种实现方式"}},[t._v("#")]),t._v(" 2. 几种实现方式")]),t._v(" "),a("p",[t._v("添加netty依赖：")]),t._v(" "),a("div",{staticClass:"language-markup line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markup"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- https://mvnrepository.com/artifact/io.netty/netty-all --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("io.netty"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("netty-all"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4.1.42.Final"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("my"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rianico")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Executors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimeUnit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimerTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("HashedWheelTimer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" SchedulerTest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 1. jdk实现的Timer为单线程调度，多个任务串行阻塞\n   * 2. TimerTask中抛出的异常会影响Timer的执行\n   */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" jdkTimer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scheduleAtFixedRate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" TimerTask "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentTimeMillis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 1. JDK 1.5开始新增的ScheduledExecutorService\n   * 2. 多线程调度，任务之间不会阻塞\n   * 3. 抛出的异常不会影响ScheduledExecutorService的执行\n   * 4. 两种常规调度方式：ScheduleAtFixedRate（delay at task start），ScheduleWithFixedDelay（delay at task end）\n   * 5. 底层使用的数据结构为PriorityQueue\n   */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" schedulerService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Executors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("newScheduledThreadPool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scheduleAtFixedRate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Runnable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentTimeMillis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimeUnit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 1. Netty中的时间轮算法，通常默认为1000mills/格，共512格，分别由tickDuration，ticksPerWheel控制。\n   * 2. 单线程，任务之间会阻塞，所以任务考虑设置为非阻塞\n   * 3. newTimeOut:添加新的时间轮任务\n   */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" hashedWheelTimer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// default: new HashedWheelTimer(threadFactory, tickDuration, unit, 512)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" HashedWheelTimer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("newTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TimerTask "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentTimeMillis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimeUnit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    jdkTimer()")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    schedulerService()")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    hashedWheelTimer()")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br")])]),a("h2",{attrs:{id:"_3-最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-最佳实践"}},[t._v("#")]),t._v(" 3. 最佳实践")]),t._v(" "),a("ol",[a("li",[t._v("Timer基本可以被抛弃，通常采用ScheduledExecutorService 和 HashedWheelTimer代替。")]),t._v(" "),a("li",[a("code",[t._v("ScheduledExecutorService")]),t._v("在任务数非常大的时候，使用堆(PriorityQueue)维护任务的新增、删除会造成性能的下降，"),a("code",[t._v("HashedWheelTimer")]),t._v("是面向bucket的，适合于任务数量大的场景。")]),t._v(" "),a("li",[t._v("HashedWheelTimer是"),a("strong",[t._v("单线程")]),t._v("的，因此需要保证task是非阻塞的，或者交由线程池去执行，HashedWheelTimer只充当一个定时调度器。")]),t._v(" "),a("li",[t._v("HashedWheelTimer需要是全局静态的，否则多个HashedWheelTimer实例，也会是时间轮算法失去意义。")]),t._v(" "),a("li",[t._v("HashedWheelTimer设置合理的ticksPerWheel以及tickDuration，tickDuration决定了精度以及指针转动的频率，ticksPerWheel则决定了task发生Hash碰撞的频率。")]),t._v(" "),a("li",[t._v("时间跨度很大的时候，可以考虑使用层级时间轮。")])]),t._v(" "),a("p",[a("strong",[t._v("Reference：")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&mid=2651485083&idx=1&sn=089a76c2ccef0a98831a389fd7943d23&chksm=bd251fe48a5296f22df28cd53827eac4cb153855b70266ce753cdb0ee6d145782e5a664ebd9a&mpshare=1&scene=1&srcid=&sharer_sharetime=1569909947817&sharer_shareid=24a7761e1ff7c16d32495d378d4ca2de&key=2d030d495be8f43e1d911c8464cebf301d5cb04f17797a47c12e1b20b32d4131ebf9fd672946629c5f761c3d4f96fe1b8821006433c85bfb6127f0e01120bfe5d2eca68a1bd9d12eda51b74ad45b1920&ascene=1&uin=MTU0NzEwNTU4NA==&devicetype=Windows%2010&version=62070141&lang=zh_CN&pass_ticket=nB7LIrOI7ggsIfTOffgmltlcIM7Tm%2bgk11c7xZ6ycRRjnL7dcVOsxTF6PZs8qmfE#",target:"_blank",rel:"noopener noreferrer"}},[t._v("定时器有几种实现方式？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.wangqi.love/articles/Java/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E4%B8%8EHashedWheelTimer.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("定时任务与HashedWheelTimer"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://xiaoyue26.github.io/2018/10/27/2018-10/HashedWheelTimer-%E5%A4%A7%E9%87%8F%E5%AE%9A%E6%97%B6%E5%99%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-Netty%E4%B8%8Ekafka/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashedWheelTimer-大量定时器解决方案(Netty与kafka)"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);