(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{852:function(t,a,e){"use strict";e.r(a);var r=e(70),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_1-单指令周期处理器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-单指令周期处理器"}},[t._v("#")]),t._v(" 1. 单指令周期处理器")]),t._v(" "),e("p",[t._v("CPU 的时钟周期是固定的，但指令的电路复杂程度是不同的，所以不同的指令执行的时间是不同的，这样一来，如果按照单指令周期处理器的设计思路，根据木桶原理，一个时钟周期至少要等于最复杂的那条指令所耗费的时间。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://static001.geekbang.org/resource/image/6c/ee/6c85e2dd9b9988d8a458fb1200d96eee.jpeg",alt:""}})]),t._v(" "),e("p",[t._v("这样一来就会导致 CPU 的时钟频率无法太高，有些复杂指令没有办法在一个时钟周期内运行完成。那么在下一个时钟周期到来，开始执行下一条指令的时候，前一条指令的执行结果可能还没有写入到寄存器里面。那下一条指令读取的数据就是不准确的，就会出现错误：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://static001.geekbang.org/resource/image/30/9b/3097988ae8dfc82e33ab80234bd5a29b.jpeg",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"_2-指令流水线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-指令流水线"}},[t._v("#")]),t._v(" 2. 指令流水线")]),t._v(" "),e("p",[t._v("指令的执行可以拆分成 “取指令、译码、执行” 三大大步骤，可以让一个步骤对应一个指令周期，来"),e("strong",[t._v("提高 CPU 的吞吐率")]),t._v("：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://static001.geekbang.org/resource/image/1e/ad/1e880fa8b1eab511583267e68f0541ad.jpeg",alt:""}})]),t._v(" "),e("p",[t._v("这样一来，下一条指令的取指令步骤，不需要等到上一条指令全部执行完成，就可以开始执行了。")]),t._v(" "),e("p",[t._v("这样种协作模式就是"),e("strong",[t._v("指令流水线")]),t._v("。每一个独立的步骤，称之为"),e("strong",[t._v("流水线阶段")]),t._v("或者"),e("strong",[t._v("流水线级（Pipeline Stage）")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[t._v("如果我们把一个指令拆分成“取指令 - 指令译码 - 执行指令”这样三个部分，那这就是一个三级的流水线。如果我们进一步把“执行指令”拆分成“ALU 计算（指令执行）- 内存访问 - 数据写回”，那么它就会变成一个五级的流水线。")])]),t._v(" "),e("p",[t._v("通过更细粒度的拆分，我们不需要确保最复杂的那条指令在时钟周期里面执行完成，而只要保障一个最复杂的流水线级的操作，在一个时钟周期内完成就好了。")]),t._v(" "),e("blockquote",[e("p",[t._v("现代的 ARM 或者 Intel 的 CPU，流水线级数都已经到了 14 级。")])]),t._v(" "),e("p",[t._v("流水线的深度，也是有性能成本的，每一级流水线对应的输出，都要放到**流水线寄存器（Pipeline Register）**里面，然后在下一个时钟周期，交给下一个流水线级去处理。")]),t._v(" "),e("p",[t._v("每增加一级的流水线，就要多一级写入到流水线寄存器的操作，每个操作耗时约 20 皮秒（ps，"),e("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[e("svg",{staticStyle:{"vertical-align":"-0.05ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"5.22ex",height:"2.005ex",viewBox:"0 -864 2307.2 886"}},[e("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"matrix(1 0 0 -1 0 0)"}},[e("g",{attrs:{"data-mml-node":"math"}},[e("g",{attrs:{"data-mml-node":"msup"}},[e("g",{attrs:{"data-mml-node":"mn"}},[e("path",{attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}}),e("path",{attrs:{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",transform:"translate(500, 0)"}})]),e("g",{attrs:{"data-mml-node":"TeXAtom",transform:"translate(1000, 393.1) scale(0.707)"}},[e("g",{attrs:{"data-mml-node":"mo"}},[e("path",{attrs:{"data-c":"2212",d:"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"}})]),e("g",{attrs:{"data-mml-node":"mn",transform:"translate(778, 0)"}},[e("path",{attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}}),e("path",{attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z",transform:"translate(500, 0)"}})])])])])])])]),t._v(" 秒）。")],1),t._v(" "),e("p",[e("img",{attrs:{src:"https://static001.geekbang.org/resource/image/d9/26/d9e141af3f2c5eedd5aed438388cfe26.jpeg",alt:""}})]),t._v(" "),e("p",[t._v("一旦流水线级数过多，就会导致这部分 overhead 开销过大，设计合理的流水线级数也是现代 CPU 中非常重要的一点。")]),t._v(" "),e("p",[e("strong",[t._v("流水线技术并不能缩短单条指令的响应时间这个性能指标，但是可以增加在运行很多条指令时候的吞吐率，同时更新的粒度带来了更多的优化可能（如乱序执行）。")])]),t._v(" "),e("p",[t._v("CPU 的设计，又是由一个个独立的组合逻辑电路串接起来形成的，天然能够适合这样采用流水线“专业分工”的工作方式。")]),t._v(" "),e("p",[t._v("并不是主频越高，流水线级数越多越好，主要存在以下两方面问题：")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("功耗")]),t._v("，提升水线深度，必须要和提升 CPU 主频同时进行，才能跟原来的处理器保持相同的性能，但这也代表功耗大大增加。")]),t._v(" "),e("li",[e("strong",[t._v("冒险问题")]),t._v("，实际编程中不同语句之间往往存在着依赖关系，数据之间的依赖关系属于数据冒险（还有结构冒险、控制冒险等），对于这些问题，也有乱序执行、分支预测等相应的解决方案。然而，"),e("strong",[t._v("流水线越长，也意味着这些问题越难解决")]),t._v("。")])]),t._v(" "),e("p",[t._v("流水线技术可以解决单指令周期问题，但也需要讲究适度，属于一个折衷（Trade-Off）方案，过深的流水线，不仅不能提升计算机指令的吞吐率，更会加大计算的功耗和散热问题。")]),t._v(" "),e("p",[t._v("一般用 **IPC（Instruction Per Cycle）**来衡量 CPU 执行指令的效率，是 **CPI（Cycle Per Instruction）**的倒数，")])])}),[],!1,null,null,null);a.default=s.exports}}]);